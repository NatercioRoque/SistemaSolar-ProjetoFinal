#include <GL/glut.h>
#include <stdlib.h>


float anguloX = 0.0f, anguloY = 0.0f; 
float zoom = -20.0f;              
int lastMouseX, lastMouseY; 
int botaoEsquerdoAtivo = 0;          


void initGL() {
    glEnable(GL_DEPTH_TEST); 
    glClearColor(0.0, 0.0, 0.0, 1.0); 
}


void display() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();

    
    glTranslatef(0.0f, 0.0f, zoom);
    glRotatef(anguloX, 1.0f, 0.0f, 0.0f);
    glRotatef(anguloY, 0.0f, 1.0f, 0.0f);

  
    glColor3f(1.0, 1.0, 0.0);
    glutSolidSphere(2.0, 30, 30);

    
    glPushMatrix();
        glRotatef(anguloY, 0.0, 1.0, 0.0);
        glTranslatef(6.0, 0.0, 0.0);
        glColor3f(0.0, 0.0, 1.0);
        glutSolidSphere(1.0, 20, 20);
    glPopMatrix();

    glutSwapBuffers();
}


void reshape(int w, int h) {
    if (h == 0) h = 1;
    float proporcao = (float)w / (float)h;

    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0, proporcao, 1.0, 100.0);
    glMatrixMode(GL_MODELVIEW);
}


void keyboard(unsigned char key, int x, int y) {
    switch (key) {
        case 27: 
            exit(0);
            break;
        case 'w': 
            zoom += 1.0f;
            break;
        case 's': 
            zoom -= 1.0f;
            break;
        case 'r': 
            anguloX = anguloY = 0;
            zoom = -20.0f;
            break;
    }
    glutPostRedisplay();
}


void mouse(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON) {
        if (state == GLUT_DOWN) {
            botaoEsquerdoAtivo = 1;
            lastMouseX = x;
            lastMouseY = y;
        } else {
            botaoEsquerdoAtivo = 0;
        }
    }

   
    if (button == 3) zoom += 1.0f; 
    if (button == 4) zoom -= 1.0f; 
    glutPostRedisplay();
}


void motion(int x, int y) {
    if (botaoEsquerdoAtivo) {
        anguloX += (y - lastMouseY);
        anguloY += (x - lastMouseX);
        lastMouseX = x;
        lastMouseY = y;
        glutPostRedisplay();
    }
}


int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Sistema Solar - Controle de Janela, Teclado e Mouse");

    initGL();

    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutKeyboardFunc(keyboard);
    glutMouseFunc(mouse);
    glutMotionFunc(motion);

    glutMainLoop();
    return 0;
}
